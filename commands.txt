docker-compose up --build
docker-compose up
docker-compose down

user: http://localhost:5173
admin: http://localhost:5174
backend: http://localhost:8000/
db mysql: http://localhost:8080/    
db postrgresql: https://console.neon.tech/app/projects/lucky-mouse-29317073/branches/br-blue-pine-a11etjdr/tables?database=neondb

cd server
py -m venv venv 
./venv/scripts/activate
pip install -r requirements.txt



To run manual python commands: 
docker ps
docker exec -it <container_name_or_id> /bin/bash
docker exec -it fbefe058dae8 /bin/bash




pip install djangorestframework
py manage.py makemigrations --dry-run --verbosity 3
py manage.py runserver
py manage.py createsuperuser

pip install coverage
coverage run --omit='*/venv/*' manage.py test
coverage html


docker builder prune --all --force    //clear cache


docker-compose logs backend
docker-compose logs user
docker-compose logs admin
docker-compose logs db

docker-compose exec user sh
ps aux | grep vite

pip freeze > requirements.txt

git reflog

mysql 
DATABASES = { 
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'emotract',
        'USER': 'root',
        'PASSWORD': 'NLP_emotract',
        'HOST': 'db',
        'PORT': '3306',
    }
}

postgresql
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': tmpPostgres.path.replace('/', ''),
        'USER': tmpPostgres.username,
        'PASSWORD': tmpPostgres.password,
        'HOST': tmpPostgres.hostname,
        'PORT': 5432,
    }
}